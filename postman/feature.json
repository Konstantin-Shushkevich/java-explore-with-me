{
  "info": {
    "_postman_id": "c24e3f4b-7593-48d6-8843-87e1b2c184b2",
    "name": "Explore with me feature-comments",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "39443467"
  },
  "item": [
    {
      "name": "User1 create",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201 and response is json\", function() {\r",
              "    pm.response.to.have.status(201); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"email\": \"user1@testmail.com\",\r\n  \"name\": \"Username 1\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/users",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User2 create",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201 and response is json\", function() {\r",
              "    pm.response.to.have.status(201); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"email\": \"user2@testmail.com\",\r\n  \"name\": \"Username 2\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/users",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User3 create",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201 and response is json\", function() {\r",
              "    pm.response.to.have.status(201); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"email\": \"user3@testmail.com\",\r\n  \"name\": \"Username 3\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/users",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "User4 create",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201 and response is json\", function() {\r",
              "    pm.response.to.have.status(201); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"email\": \"user4@testmail.com\",\r\n  \"name\": \"Username 4\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/users",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Category1 create",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201 and response is json\", function() {\r",
              "    pm.response.to.have.status(201); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"name\": \"Category1\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/categories",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "categories"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Event1 create",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201 and response is json\", function() {\r",
              "    pm.response.to.have.status(201); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"annotation\": \"Test annotation for test.\",\r\n  \"category\": 1,\r\n  \"description\": \"Test description for first-user test event.\",\r\n  \"eventDate\": \"2025-05-17 12:00:00\",\r\n  \"location\": {\r\n    \"lat\": 55.754167,\r\n    \"lon\": 37.62\r\n  },\r\n  \"paid\": true,\r\n  \"participantLimit\": 0,\r\n  \"requestModeration\": false,\r\n  \"title\": \"Test event â„–1\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/1/events",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "1",
            "events"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Event1 update to PUBLISHED",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200 and response is json\", function() {\r",
              "    pm.response.to.have.status(200); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"stateAction\": \"PUBLISH_EVENT\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/events/1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "events",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Request1 create",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201 and response is json\", function() {\r",
              "    pm.response.to.have.status(201); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/4/requests?eventId=1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "4",
            "requests"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Request2 create",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201 and response is json\", function() {\r",
              "    pm.response.to.have.status(201); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/3/requests?eventId=1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "3",
            "requests"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Comment1 create",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201 and response is json\", function() {\r",
              "    pm.response.to.have.status(201); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"text\": \"Test text comment 1\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/2/comments?eventId=1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "2",
            "comments"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Comment2 create",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201 and response is json\", function() {\r",
              "    pm.response.to.have.status(201); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"text\": \"Test text comment 2\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/3/comments?eventId=1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "3",
            "comments"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Comment3 create",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201 and response is json\", function() {\r",
              "    pm.response.to.have.status(201); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"text\": \"Test text comment 3\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/4/comments?eventId=1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "4",
            "comments"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Comment4 create",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201 and response is json\", function() {\r",
              "    pm.response.to.have.status(201); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"text\": \"Test text comment 4\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/2/comments?eventId=1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "2",
            "comments"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Comment1 update",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200 and response is json\", function() {\r",
              "    pm.response.to.have.status(200); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"text\": \"Test text comment 1 UPDATED\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/2/comments/1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "2",
            "comments",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get all Comments by User2",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200 and response is json\", function() {\r",
              "    pm.response.to.have.status(200); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); \r",
              "\r",
              "pm.test(\"Test list comment response\", function () {\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData.length, 'Expected list size = 2').to.eql(2);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/2/comments",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "2",
            "comments"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get Comment by id",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200 and response is json\", function() {\r",
              "    pm.response.to.have.status(200); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/comments/2",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "2"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get all comments for event",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200 and response is json\", function() {\r",
              "    pm.response.to.have.status(200); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); \r",
              "\r",
              "pm.test(\"Test list comment response\", function () {\r",
              "    pm.response.to.be.withBody;\r",
              "    pm.response.to.be.json;\r",
              "    var jsonData = pm.response.json();\r",
              "    pm.expect(jsonData.length, 'Expected list size = 4').to.eql(4);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/comments?eventId=1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Delete comment by author",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", function() {\r",
              "    pm.response.to.have.status(204); \r",
              "}); \r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/2/comments/1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "2",
            "comments",
            "1"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Delete comment by admin",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", function() {\r",
              "    pm.response.to.have.status(204); \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/admin/comments/2",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "comments",
            "2"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Comment create with blank text",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400 and response is json\", function() {\r",
              "    pm.response.to.have.status(400); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"text\": \"\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/2/comments?eventId=1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "2",
            "comments"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Comment update with blank text",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400 and response is json\", function() {\r",
              "    pm.response.to.have.status(400); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"text\": \"\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/3/comments/4",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "3",
            "comments",
            "4"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get comment by invalid id",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404 and response is json\", function() {\r",
              "    pm.response.to.have.status(404); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/comments/999",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments",
            "999"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get all comments for event by invalid id",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404 and response is json\", function() {\r",
              "    pm.response.to.have.status(404); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); \r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/comments?eventId=999",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "999"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get all comments for event with invalid time properties",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400 and response is json\", function() {\r",
              "    pm.response.to.have.status(400); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); \r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/comments?eventId=1&rangeStart=2026-01-01%2012%3A00%3A00&rangeEnd=2025-05-05%2000%3A00%3A00",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "comments"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "1"
            },
            {
              "key": "rangeStart",
              "value": "2026-01-01%2012%3A00%3A00"
            },
            {
              "key": "rangeEnd",
              "value": "2025-05-05%2000%3A00%3A00"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get all User Comments by invalid userId",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404 and response is json\", function() {\r",
              "    pm.response.to.have.status(404); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/999/comments",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "999",
            "comments"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get all user comments with invalid time properties",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400 and response is json\", function() {\r",
              "    pm.response.to.have.status(400); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/4/comments?rangeStart=2026-01-01%2012%3A00%3A00&rangeEnd=2025-05-05%2000%3A00%3A00",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "4",
            "comments"
          ],
          "query": [
            {
              "key": "rangeStart",
              "value": "2026-01-01%2012%3A00%3A00"
            },
            {
              "key": "rangeEnd",
              "value": "2025-05-05%2000%3A00%3A00"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Comment create with invalid userId",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404 and response is json\", function() {\r",
              "    pm.response.to.have.status(404); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"text\": \"Testing text for invalid userId\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/999/comments?eventId=1",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "999",
            "comments"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Comment create with invalid eventId",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404 and response is json\", function() {\r",
              "    pm.response.to.have.status(404); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"text\": \"Testing text for invalid eventId\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/2/comments?eventId=999",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "2",
            "comments"
          ],
          "query": [
            {
              "key": "eventId",
              "value": "999"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Comment update with invalid userId",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404 and response is json\", function() {\r",
              "    pm.response.to.have.status(404); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"text\": \"Updated text1 with invalid userId\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/999/comments/4",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "999",
            "comments",
            "4"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Comment update invalid author",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404 and response is json\", function() {\r",
              "    pm.response.to.have.status(404); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n    \"text\": \"Updated text1 with invalid author\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/users/1/comments/4",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "1",
            "comments",
            "4"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Delete comment by user with invalid commentId",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404 and response is json\", function() {\r",
              "    pm.response.to.have.status(404); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); \r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/2/comments/999",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "2",
            "comments",
            "999"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Delete comment by user invalid author",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404 and response is json\", function() {\r",
              "    pm.response.to.have.status(404); \r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json; \r",
              "}); \r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/1/comments/4",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "users",
            "1",
            "comments",
            "4"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Delete comment by admin with invalid commentId",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404 and response is json\", function() {\r",
              "    pm.response.to.have.status(404);\r",
              "    pm.response.to.be.withBody; \r",
              "    pm.response.to.be.json;  \r",
              "}); "
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/admin/comments/999",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "admin",
            "comments",
            "999"
          ]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    }
  ]
}